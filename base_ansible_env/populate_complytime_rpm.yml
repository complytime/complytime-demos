---
- name: "Prepare the environment to build ComplyTime RPM on the Demo VM"
  hosts: demo_vm
  become: false
  vars:
    complytime_spec_file: "complytime.spec"
  tasks:
    - name: "Install required packages"
      ansible.builtin.dnf:
        name:
          - git
          - go-toolset
          - make
          - pandoc
          - rpmdevtools
        state: present
      become: true

    - name: "Copy ComplyTime SPEC file to Demo VM"
      ansible.builtin.copy:
        src: "{{ complytime_spec_file }}"
        dest: "~"
        mode: "0640"

    - name: "Read complytime.spec file content"
      ansible.builtin.slurp:
        src: "~/{{ complytime_spec_file }}"
      register: spec_content

    - name: "Extract version from spec file"
      ansible.builtin.set_fact:
        complytime_version: "{{ (spec_content.content | b64decode | regex_findall('^Version:\\s*([0-9.]+)', multiline=True))[0] }}"

    - name: "Ensure the RPM build tree is created"
      ansible.builtin.command:
        cmd: "rpmdev-setuptree"
      changed_when: false

    - name: "Download the ComplyTime source code as informed in the SPEC file"
      ansible.builtin.command:
        cmd: "spectool -g complytime.spec"
      changed_when: false

    - name: "Copy ComplyTime source code to the RPM build tree"
      ansible.builtin.copy:
        src: "~/v{{ complytime_version }}.tar.gz"
        dest: "~/rpmbuild/SOURCES/"
        mode: "0640"
        remote_src: true

    - name: "Ensure GOTOOLCHAIN=auto is set for a specific user"
      ansible.builtin.lineinfile:
        path: ~/.bashrc
        line: 'export GOTOOLCHAIN=auto'
        insertafter: EOF
        state: present

    - name: "Preamble check for the ComplyTime RPM build"
      ansible.builtin.command:
        cmd: "rpmbuild -bp ~/{{ complytime_spec_file }}"
      register: preamble_check
      changed_when: false

    - name: "Show preamble check warnings and errors"
      ansible.builtin.debug:
        msg: "{{ preamble_check.stderr_lines | select('match', '^(warning|error)') | list }}"
      changed_when: true
      when: preamble_check.stderr_lines | select('match', '^(warning|error)') | length > 0
...
